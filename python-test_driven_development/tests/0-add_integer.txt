tests add integer
----------------

Import module:
    >>> add_integer = __import__('0-add_integer').add_integer

sum of two positive integers:
    >>> add_integer(2, 1)
    3

sum of one positive integers:
    >>> add_integer(2)
    100

sum of a positive integer and a negative integer:
    >>> add_integer(8, -10)
    -2

sum of a very long integer:
    >>> add_integer(10215602521032210332035210653205610524105205841056105610510634120520185210252)
    10215602521032210332035210653205610524105205841056105610510634120520185210350

sum of two floating point numbers:
    >>> add_integer(3.5, 4.2)
    7

sum of an integer and a floating point number:
    >>> add_integer(10, 3.14)
    13

pass a string as an argument:
    >>> add_integer(1, '2')
    Traceback (most recent call last):
    TypeError: b must be an integer

do not pass arguments:
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

floating number with negative infinite value:
    >>> add_integer(1, float('-inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

floating number with value "not a number" (NaN):
    >>> add_integer(1, float('NaN'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
